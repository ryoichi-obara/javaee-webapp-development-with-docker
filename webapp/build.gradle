apply plugin: 'war'

group = 'com.sightseekerstudio'
version = '1.0.0-SNAPSHOT'

def javaVersion = 1.8

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-cargo-plugin:2.2.3'
    }
}

apply plugin: 'com.bmuschko.cargo'
apply plugin: 'eclipse'


class RemoteContainer {
    String name
    String hostname
    String containerId
}

def remoteContainers = [
    new RemoteContainer(name:'wildfly1', hostname:'appserver1'),
    new RemoteContainer(name:'wildfly2', hostname:'appserver2')
]

import com.bmuschko.gradle.cargo.tasks.remote.CargoRedeployRemote

remoteContainers.each { config ->
    task "deployRemote${config.name.capitalize()}"(type: CargoRedeployRemote) {
        // description = "Deploys WAR to remote WildFly '${config.name}'."
        hostname = config.hostname
        username = "admin"
        password = "password"
    }
}

task deployToAllRemote {
    dependsOn remoteContainers.collect { "deployRemote${it.name.capitalize()}" }
    description = 'Deploys to all remote WildFly containers.'
    group = 'deployment'
}
cargo {
    containerId = 'wildfly10x'
    port = 8080
}

war {
    archiveName = 'webapp.war'
}

repositories {
    mavenCentral()
}

dependencies {
    providedCompile 'javax:javaee-api:7.0'
    compileOnly 'org.projectlombok:lombok:1.16.18'

    def cargoVersion = '1.5.0'
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
        "org.codehaus.cargo:cargo-ant:$cargoVersion"
    cargo "org.wildfly:wildfly-controller-client:8.2.0.Final"
}
